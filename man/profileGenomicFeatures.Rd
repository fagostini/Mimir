% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/profileGenomicFeatures.R
\name{profileGenomicFeatures}
\alias{profileGenomicFeatures}
\title{Calculate metadata profiles across genomic features}
\usage{
profileGenomicFeatures(genomicRegions = NULL, sampleObject = NULL,
  bins = c(10, 100, 100), TxDb = NULL, weightCol = NULL,
  ignoreStrand = FALSE, collapse = TRUE, verbose = TRUE)
}
\arguments{
\item{genomicRegions}{A named list of \code{\link[GenomicRanges:GRangesList-class]{GenomicRanges}} objects.}

\item{sampleObject}{A \code{\link[GenomicRanges:GRanges-class]{GenomicRanges}} or \code{\link[GenomicAlignments:GAlignments-class]{GenomicAlignments}} object.}

\item{bins}{An ordered integer vector (must be greater equal that the length of \code{genomicRegions}), or 3 if the latter is not provided. The vector order determines the number of bins for each region. If more bins than regions are provided, the additional will be ignored.}

\item{TxDb}{A \code{\link[GenomicFeatures:TxDb-class]{GenomicFeatures}} object. Required if \code{genomicRegions} is not provided. It must contain \code{\link[GenomeInfoDb:Seqinfo-class]{GenomeInfoDb}} information.}

\item{weightCol}{A single character string. This must be the name of an integer column in the \code{sampleObject} object.}

\item{ignoreStrand}{When set to ‘TRUE’, the strand information in \code{sampleObject} is ignored. This does not affect the features in \code{genomicRegions}.}

\item{collapse}{When set to ‘TRUE’, the profiles are collapsed into a single profile.}

\item{verbose}{When set to ‘TRUE’, the function prints diagnostic messages.}
}
\value{
A \code{\link[data.table:data.table-class]{data.table}} of the normalised binned coverage across the genomic features. Column names are determined by \code{collapse}.
}
\description{
Calculate metadata profiles across genomic features
}
\examples{
library("TxDb.Dmelanogaster.UCSC.dm3.ensGene")
TxDb = TxDb.Dmelanogaster.UCSC.dm3.ensGene

query = extractGenomicFeatures(TxDb)

library("pasillaBamSubset")
library("GenomicAlignments")

fl1 <- untreated1_chr4()
subject = readGAlignments(fl1)

profile = profileGenomicFeatures(genomicRegions=query, sampleObject=subject, TxDb=TxDb)

library("ggplot2")

ggplot(profile, aes(x=bin, y=Mean, col=region_id)) + 
   geom_ribbon(aes(ymin=Mean-Sd, ymax=Mean+Sd, fill=region_id), alpha=0.5) +
   geom_line() +
   geom_vline(xintercept=c(10.5, 110.5), linetype="dashed") +
   scale_x_continuous("Relative position") +
   scale_y_continuous("Average normalised signal")
}
